from com.mitmws.anomalydetection import DetectedAnomaly
from com.mitmws.httpproxy.trafficlogger import WebsocketTrafficRecord
from com.mitmws.anomalydetection import DetectionRuleSelfTestStatus
from java.util import ArrayList

def getName():
    return "Google storage bucket detected"

def getActiveRuleType():
    return "PAYLOAD"
    
def getCategory():
    return "Infrastructure"

def getDescription():
    return "Detects google storage bucket urls"

def getFrameScope():
  return ["TEXT","PING","PONG"]

def getTestScope():
  return "APPLICATION"

def analyze( websocket_messages ):
    anomalies = ArrayList()
    for websocket_message in websocket_messages:
        if bool(websocket_message.getFrame().payloadMatchesRegex("(?i).*storage\.googleapis\.com\/(storage|upload|batch|download).*")):
            anomaly = DetectedAnomaly(1009, "INFO", "Regex match", "CWE-000", "Amazon S3 bucket detected")
            anomaly.setWebsocketMsgId(websocket_message.getFrame().getMessageUUID())
            anomalies.add(anomaly)
    return anomalies

def selfTest():
    result = DetectionRuleSelfTestStatus()
    result.setSelfTestOK(True)
    return result
