from com.wsproxy.anomalydetection import DetectedAnomaly
from com.wsproxy.httpproxy.trafficlogger import WebsocketTrafficRecord
from java.util import ArrayList

def getName():
    return "Private IP address in message"

def getActiveRuleType():
    return "PAYLOAD"

def getCategory():
    return "Infrastructure"

def getDescription():
    return "A private IP address was detected in the message content"

def getFrameScope():
  return ["TEXT","PING","PONG"]

def getTestScope():
  return "APPLICATION"

def analyze( websocket_messages ):
    anomalies = ArrayList()
    for websocket_message in websocket_messages:
        if bool(websocket_message.getFrame().payloadMatchesRegex(".*(192\.168\.([0-9]|[0-9][0-9]|[0-2][0-5][0-5])\.([0-9]|[0-9][0-9]|[0-2][0-5][0-5]))|(172\.([1][6-9]|[2][0-9]|[3][0-1])\.([0-9]|[0-9][0-9]|[0-2][0-5][0-5])\.([0-9]|[0-9][0-9]|[0-2][0-5][0-5]))|(10\.([0-9]|[0-9][0-9]|[0-2][0-5][0-5])\.([0-9]|[0-9][0-9]|[0-2][0-5][0-5])\.([0-9]|[0-9][0-9]|[0-2][0-5][0-5])).*")):
            anomaly = DetectedAnomaly(1008, "HIGH", "Regex match", "CWE-212", "Private IP address detected","Improper Removal of Sensitive Information Before Storage or Transfer")
            anomaly.setWebsocketMsgId(websocket_message.getFrame().getMessageUUID())
            anomalies.add(anomaly)
    return anomalies

def selfTest():
    return True
